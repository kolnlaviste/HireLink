// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String // "jobseeker" or "employer"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relation to Jobs (for employers)
  jobs         Job[]
  applications Application[]
  Company      Company[]
}

model Company {
  id       Int     @id @default(autoincrement())
  name     String
  logo     String?
  location String?
  website  String?
  ownerId  Int
  owner    User    @relation(fields: [ownerId], references: [id])

  jobs Job[]
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  companyId   Int
  postedById  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  company      Company       @relation(fields: [companyId], references: [id])
  postedBy     User          @relation(fields: [postedById], references: [id])
  applications Application[]
}

model Application {
  id          Int               @id @default(autoincrement())
  status      ApplicationStatus @default(PENDING)
  appliedAt   DateTime          @default(now())
  jobId       Int
  job         Job               @relation(fields: [jobId], references: [id])
  applicantId Int
  applicant   User              @relation(fields: [applicantId], references: [id])
}

enum Role {
  JOBSEEKER
  EMPLOYER
}

enum ApplicationStatus {
  PENDING
  INTERVIEW
  REJECTED
  ACCEPTED
  WITHDRAWN
}
